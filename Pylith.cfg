# -*- Config -*- (syntax highlighting)
# ----------------------------------------------------------------------
#
# This code was developed as part of the Computational Infrastructure
# for Geodynamics (http://geodynamics.org).
#
# Copyright (c) 2010-2017 University of California, Davis
#
# See COPYING for license information.
#
# ----------------------------------------------------------------------
# PROBLEM DESCRIPTION
# ----------------------------------------------------------------------
#
# This simulation involves coseismic slip between the continental
# crust and top of the subducting oceanic crust. The slip also
# extends down into the top of the mantle below the continental
# crust.
#
# ----------------------------------------------------------------------
# RUNNING THE SIMULATON
# ----------------------------------------------------------------------
#
# This is not a self-contained simulation configuration file. This
# file specifies only the boundary conditions and earthquake
# parameters for the simulation. The general quasi-static and mesh
# parameters are specificed in the pylithapp.cfg file which PyLith
# reads by default.
#
# To run the simulation:
# pylith step01.cfg
#
# Output will be directed to directory output.

# ----------------------------------------------------------------------
# Output of parameters used and simulation progress.
# ----------------------------------------------------------------------
[pylithapp]
dump_parameters.filename = output/step01-parameters.json
problem.progress_monitor.filename = output/step01-progress.txt

# ----------------------------------------------------------------------
# problem
# ----------------------------------------------------------------------
[pylithapp.timedependent.formulation.time_step]
total_time = 0.0*year
dt = 5.0*year

# ----------------------------------------------------------------------
# boundary conditions
# ----------------------------------------------------------------------
[pylithapp.timedependent]
bc = [All_nodes,Left_surf,Upleft,Upright]	
bc.All_nodes=pylith.bc.PointForce


	
[pylithapp.timedependent.implicit]	
# Set the output to an array of 1 output manager.	
# We will output the solution over the domain.	
output = [domain,subdomain]	
	
# Set subdomain component to OutputSolnSubset (boundary of the domain).	
output.subdomain = pylith.meshio.OutputSolnSubset	
	

	
# Left surf Force	
[pylithapp.timedependent.bc.Left_surf]	
bc_dof = [0]	
label = Left_surf	
db_initial = spatialdata.spatialdb.SimpleDB	
db_initial.label = Dirichlet BC on Outer Sphere	
db_initial.query_type = nearest	
db_initial.iohandler.filename = spatialdb/forces_zero.spatialdb	

	
# Right surf Force	
#[pylithapp.timedependent.bc.Right_surf]	
#bc_dof = [0]	
#label = Right_surf	
#db_initial = spatialdata.spatialdb.SimpleDB	
#db_initial.label = Dirichlet BC on Outer Sphere	
#db_initial.query_type = nearest	
#db_initial.iohandler.filename = spatialdb/forces_one.spatialdb	
	

	
# Right surf Force	
[pylithapp.timedependent.bc.Upleft]	
bc_dof = [1]	
label = Upleft	
db_initial = spatialdata.spatialdb.SimpleDB	
db_initial.label = Dirichlet BC on Outer Sphere	
db_initial.query_type = nearest	
db_initial.iohandler.filename = spatialdb/forces_zero_2D.spatialdb	
	

	
# Right surf Force	
[pylithapp.timedependent.bc.Upright]	
bc_dof = [1]	
label = Upright	
db_initial = spatialdata.spatialdb.SimpleDB	
db_initial.label = Dirichlet BC on Outer Sphere	
db_initial.query_type = nearest	
db_initial.iohandler.filename = spatialdb/forces_zero_2D.spatialdb



	
# Right surf Force.. Real	
[pylithapp.timedependent.bc.All_nodes]	
bc_dof = [0,1]	
label = All_nodes	
db_initial = spatialdata.spatialdb.SimpleDB	
db_initial.label = Dirichlet BC on Outer Sphere	
db_initial.query_type = nearest	
db_initial.iohandler.filename = spatialdb/forces.spatialdb	
	


# ----------------------------------------------------------------------
# output
# ----------------------------------------------------------------------
# Domain
[pylithapp.problem.formulation.output.domain]
writer.filename = output/All_Nodes.vtk

[pylithapp.problem.formulation.output.subdomain]	
# Name of nodeset for ground surface.	
label = Upper_surf	
writer.filename = output/UpperSurf.vtk	
	

# End of file

